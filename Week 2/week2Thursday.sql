/*
CREATE OR REPLACE SEQUENCE[seq name]
MINVALUE[value]
MAXVALUE[value]
STARTWITH[value]
INCREMENT BY[value]
CACHE[value];
*/
CREATE SEQUENCE MYTESTSEQ
MINVALUE 100
MAXVALUE 10000
START WITH 5000
INCREMENT BY -5
CACHE 20;

SELECT MYTESTSEQ.NEXTVAL FROM DUAL;
INSERT INTO STUDENT VALUES(MYTESTSEQ.NEXTVAL,'CRANSTON',3);
--A VIEW TO A KILL
--A VIEW IS A SAVED SELECT STATEMENT
CREATE OR REPLACE VIEW MYVIEW
AS SELECT TITLE AS A_LIST_OF_STUFF FROM ALBUM
UNION
SELECT NAME FROM ARTIST;

SELECT * FROM MYVIEW
WHERE A_LIST_OF_STUFF LIKE 'T%';

--INDEX
/* CREATE INDEX[my name]
ON [Table name] ( [column name] ) ASC/DESC;
*/

CREATE INDEX MYINDEX
ON ALBUM(ARTISTID);

CREATE OR REPLACE TRIGGER MYTRIG
BEFORE INSERT ON STUDENT
FOR EACH ROW
BEGIN
SELECT MYTESTSEQ.NEXTVAL INTO: NEW.S_ID FROM DUAL;
END;

INSERT INTO STUDENT VALUES(33,'IVAN',3);
SELECT * FROM STUDENT;

-- FUCNTIONS
/* FUNCTIONS ARE A BLOCK OF CODE WE CAN EXECUTE
THEY MUST RETURN ONE AND ONLY ONE VALUE
CAN HAVE 0+ PARAMTERS
FUNCTIONS CAN CALL OTHER FUNCTIONS
CANNOT CALL STORED PROCEDURES
NO TRANSACTION OR DML
*/
CREATE OR REPLACE FUNCTION CALC_TAX
(T_ID IN NUMBER, TAX IN NUMBER)
RETURN NUMBER AS
TOTAL_PRICE NUMBER(10,2);
BEGIN
SELECT UNITPRICE INTO TOTAL_PRICE
FROM TRACK
WHERE TRACKID=T_ID;
RETURN TOTAL_PRICE + (TOTAL_PRICE*TAX);
END;
/
--USER CALC_TAX
SELECT CALC_TAX(2921,.07) FROM DUAL;
commit;

--STORED PROCEDURES
/*DOES NOT RETURN A VALUE
SUPPORT MULTIPLE IN,OUT AND IN/OUT PARAMETERS
CAN CALL OTHER STORED PROCEDURES
CAN DO TRANSACTIONS AND DML
CANNOT DO DDL
CREATE PROCEDURE [name]
[parameters] AS
[variable declarations]
BEGIN
--LOGIC
COMMIT;
END;
*/
CREATE OR REPLACE PROCEDURE MYSTOPRO
(NAME IN VARCHAR2)
AS
BEGIN 
INSERT INTO SCHOOL VALUES(MYTESTSEQ.NEXTVAL,NAME);
COMMIT;
END;
/

EXECUTE MYSTOPRO('MIT');

--MORE COMPLEX STORED PROCEDURE
CREATE OR REPLACE PROCEDURE BEARPRO
(CAVE_NAME IN VARCHAR2, BEAR_NAME IN vARCHAR2,
BEAR_BIRTHDATE IN DATE, CAVE_ID AS NUMBER)
AS
BEGIN
INSERT INTO CAVE VALUES(MYTESTSEQ.NEXTVAL,CAVE_NAME);
INSERT INTO BEEHIVE VALUES(MYTESTSEQ.NEXTVAL,50);
INSERT INTO BEAR VALUES( MYTESTSEQ.NEXTVAL,1,BEAR_NAME,BEAR_BIRTHDATE,200,CAVE_ID);
COMMIT;
END;
/

EXECUTE BEARPRO('WOO','PERT',DATE '1999-02-15',1);