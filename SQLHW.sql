--SQL LAB QUESTIONS--
--Queries--
--2.1--
SELECT * FROM EMPLOYEE;

SELECT * FROM EMPLOYEE 
WHERE LASTNAME = 'King';

SELECT * FROM EMPLOYEE
WHERE FIRSTNAME = 'Andrew' 
AND REPORTSTO IS NULL;

--2.2--
SELECT * FROM ALBUM
ORDER BY TITLE DESC;

SELECT FIRSTNAME FROM CUSTOMER
ORDER BY CITY ASC;

--2.3--
INSERT INTO GENRE (GENREID, NAME) VALUES (26, 'Weeb');
INSERT INTO GENRE (GENREID, NAME) VALUES (27, 'WhaleSounds');

INSERT INTO Employee (EmployeeId, LastName, FirstName, Title, BirthDate, HireDate, Address, City, State, Country, PostalCode, Phone, Fax, Email) VALUES (9, 'Sloan', 'Sloan', 'Sloan Manager', TO_DATE('1962-2-18 00:00:00','yyyy-mm-dd hh24:mi:ss'), TO_DATE('2002-8-14 00:00:00','yyyy-mm-dd hh24:mi:ss'), '123 sloan ave', 'SloanTown', 'SL', 'SloanCountry', '122334', '+1 (780) 428-123', '+1 (780) 428-1243', 'sloan@chinookcorp.com');
INSERT INTO Employee (EmployeeId, LastName, FirstName, Title, BirthDate, HireDate, Address, City, State, Country, PostalCode, Phone, Fax, Email) VALUES (10, 'Not', 'Sloan', 'Not Sloan', TO_DATE('1962-2-19 00:00:00','yyyy-mm-dd hh24:mi:ss'), TO_DATE('2003-8-14 00:00:00','yyyy-mm-dd hh24:mi:ss'), '123 sloan st', 'SloanTown', 'SL', 'SloanCountry', '122334', '+1 (780) 468-123', '+1 (780) 438-1243', 'notsloan@chinookcorp.com');

INSERT INTO Customer (CustomerId, FirstName, LastName, Address, City, Country, PostalCode, Phone, Email, SupportRepId) VALUES (60, 'Sloan', 'SloanSon', 'Sloanville 12', 'Sloan', 'Sloanway', '9999', '+47 982 44 22 22', 'sloan.clone@yahoo.no', 3);
INSERT INTO Customer (CustomerId, FirstName, LastName, Address, City, Country, PostalCode, Phone, Email, SupportRepId) VALUES (61, 'NotSloan', 'SloanNot', 'SloanTOWN 1', 'Sloan', 'SloanVILLE', '1299', '+47 999 44 22 22', 'sloan.clone2@yahoo.no', 2);

--2.4--
UPDATE CUSTOMER 
SET FIRSTNAME = 'Robert', LASTNAME = 'Walter'
WHERE FIRSTNAME = 'Aaron' AND LASTNAME = 'Mitchell';

UPDATE ARTIST
SET NAME = 'CCR'
WHERE NAME = 'Creedence Clearwater Revival';

--2.5--
SELECT * FROM INVOICE 
WHERE BILLINGADDRESS LIKE 'T%';

--2.6--
SELECT * FROM INVOICE
WHERE TOTAL BETWEEN 15 AND 20;

SELECT * FROM EMPLOYEE
WHERE HIREDATE BETWEEN TO_DATE('2003-06-1 00:00:00','yyyy-mm-dd hh24:mi:ss') AND TO_DATE('2004-3-1 00:00:00','yyyy-mm-dd hh24:mi:ss');

--2.7--
DELETE FROM INVOICELINE WHERE INVOICEID = 245;
DELETE FROM INVOICELINE WHERE INVOICEID = 268;
DELETE FROM INVOICELINE WHERE INVOICEID = 290;
DELETE FROM INVOICELINE WHERE INVOICEID = 342;
DELETE FROM INVOICELINE WHERE INVOICEID = 50;
DELETE FROM INVOICELINE WHERE INVOICEID = 61;
DELETE FROM INVOICELINE WHERE INVOICEID = 116;

DELETE FROM INVOICE WHERE CUSTOMERID = 32;

DELETE FROM CUSTOMER
WHERE FIRSTNAME = 'Robert' AND LASTNAME = 'Walter';

--FUNCTIONS--
--3.1--
CREATE OR REPLACE FUNCTION MYTIME
RETURN TIMESTAMP 
IS
THETIME TIMESTAMP := SYSDATE;
BEGIN
RETURN (THETIME);
END;
/

--CREATE OR REPLACE FUNCTION MYLENGTH
--3.2--
CREATE OR REPLACE FUNCTION INVAVG
RETURN NUMBER
AS
INVTOTAL NUMBER;
BEGIN
SELECT AVG(TOTAL) INTO INVTOTAL FROM INVOICE;
RETURN INVTOTAL;
END;
/
SELECT INVAVG() FROM DUAL;

CREATE OR REPLACE FUNCTION MAXTRACK
RETURN NUMBER
AS
MTRACK NUMBER;
BEGIN
SELECT MAX(UNITPRICE) INTO MTRACK FROM TRACK;
RETURN MTRACK;
END;
/
SELECT MAXTRACK()FROM DUAL;

--3.3--
CREATE OR REPLACE FUNCTION AVPRICE
RETURN NUMBER
AS 
APRICE NUMBER;
BEGIN
SELECT AVG(UNITPRICE)INTO APRICE FROM INVOICELINE;
RETURN APRICE;
END;
/
SELECT AVPRICE() FROM DUAL;

--3.4--
CREATE OR REPLACE FUNCTION BORNAFTER (BIRTHDAY DATE,
OSTREAM OUT SYS_REFCURSOR )
RETURN DATE
AS 
BORNAFTER DATE;
BEGIN
OPEN OSTREAM FOR SELECT BIRTHDAY INTO BORNAFTER 
FROM EMPLOYEE
WHERE BIRTHDAY > '01-JAN-68';
COMMIT;
END;

--4.1
CREATE OR REPLACE PROCEDURE GETNAMES(CURS OUT SYS_REFCURSOR)
IS
BEGIN
OPEN CURS FOR SELECT FIRSTNAME, LASTNAME FROM EMPLOYEE;
COMMIT;
END;
/

--4.2
CREATE OR REPLACE PROCEDURE UPDATEINFO(
LNAME IN EMPLOYEE.LASTNAME%TYPE, 
FNAME IN EMPLOYEE.FIRSTNAME%TYPE)
IS 
BEGIN
UPDATE EMPLOYEE SET LASTNAME = LNAME, FIRSTNAME = FNAME
WHERE LASTNAME = LNAME AND FIRSTNAME = FNAME;
COMMIT;
END;
/

CREATE OR REPLACE PROCEDURE GETMAN(CURS OUT SYS_REFCURSOR,
EID IN EMPLOYEE.EMPLOYEEID%TYPE)
IS
BEGIN
OPEN CURS FOR SELECT * FROM EMPLOYEE
WHERE EMPLOYEEID = (
SELECT REPORTSTO FROM EMPLOYEE 
WHERE EMPLOYEEID = EID);
COMMIT;
END;
/

--4.3--
CREATE OR REPLACE PROCEDURE GETCUS(CURS OUT SYS_REFCURSOR)
IS
BEGIN
OPEN CURS FOR SELECT FIRSTNAME, LASTNAME, COMPANY FROM CUSTOMER;
COMMIT;
END;
/

--TRANSACTIONS--
--5.0--
CREATE OR REPLACE PROCEDURE INVDELETE
(INVID INVOICE.INVOICEID%TYPE, SYSOUT OUT SYS_REFCURSOR)
IS 
BEGIN
OPEN SYSOUT FOR SELECT * FROM INVOICE 
WHERE INVOICEID = INVID;
COMMIT;
END;
/
EXECUTE INVDELETE;

--TRIGGERS--
--6.1--
CREATE OR REPLACE TRIGGER AFTEREMP
AFTER INSERT ON EMPLOYEE
BEGIN 
NULL;
END;
/

CREATE OR REPLACE TRIGGER AFTERALBUM
AFTER UPDATE ON ALBUM
BEGIN
NULL;
END;
/

CREATE OR REPLACE TRIGGER AFTERCUSTOMER
AFTER DELETE ON CUSTOMER 
BEGIN
NULL;
END;
/

--JOINS--
--7.1 INNER--
SELECT FIRSTNAME, LASTNAME, INVOICE.INVOICEID 
FROM CUSTOMER INNER JOIN INVOICE 
ON INVOICE.CUSTOMERID = CUSTOMER.CUSTOMERID;

--7.2 OUTER--
SELECT CUSTOMERID, FIRSTNAME, LASTNAME, INVOICEID, TOTAL 
FROM CUSTOMER FULL OUTER JOIN INVOICE 
ON INVOICE.CUSTOMERID = CUSTOMER.CUSTOMERID;

--7.3 RIGHT--
SELECT ARTIST.NAME, TITLE FROM ARTIST 
RIGHT OUTER JOIN ALBUM ON ARTIST.ARTISTID = ALBUM.ARTISTID;

--7.4 CROSS--
SELECT * FROM ALBUM CROSS JOIN ARTIST 
ORDER BY ARTIST.NAME ASC;

--7.5 SELF--
SELECT * FROM EMPLOYEE E1, EMPLOYEE E2 
WHERE E1.REPORTSTO = E2.EMPLOYEEID;

