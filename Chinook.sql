-- Section 2 --

-- 2.1 --
SELECT * FROM EMPLOYEE;
SELECT * FROM EMPLOYEE WHERE LASTNAME = 'King';
SELECT * FROM EMPLOYEE WHERE FIRSTNAME = 'Andrew' AND REPORTSTO IS NULL;

-- 2.2 --
-- WORKS --
SELECT * FROM ALBUM ORDER BY TITLE DESC;
-- WORKS --
SELECT FIRSTNAME FROM CUSTOMER ORDER BY FIRSTNAME ASC;
-- 2.3 --
-- WORKS --
INSERT INTO GENRE VALUES(26, 'SLOAN MEGA DEATHMETAL');
-- WORKS --
INSERT INTO GENRE VALUES(27, 'SLOAN OVERWATCH SOUNDS');
-- WORKS --
INSERT INTO EMPLOYEE VALUES(9, 'GWALTNEY', 'SLOAN', 'MASTER',1, SYSDATE, SYSDATE, 'NO WHERE', 'LOST', 'SOUTH_CAROLINA', 'NOPE',
'29876', '1234567890', '0987654321', 'TEST@TEST.COM');
-- WORKS --
INSERT INTO EMPLOYEE VALUES(10, 'JOHN', 'DOE', 'MASTER',1, SYSDATE, SYSDATE, 'NO WHERE', 'LOST', 'SOUTH_CAROLINA', 'NOPE',
'29876', '1234567890', '0987654321', 'TEST@TEST.COM');
-- WORKS --
INSERT INTO CUSTOMER VALUES (60, 'TEST', 'TEST', NULL, '16 NOPE', 'NOPEHILL', 'NC', 'NOPEHILL', '00000', '1234567890', '9876543210', 'TEST@TEST.COM', 4);
-- WORKS --
INSERT INTO CUSTOMER VALUES (61, 'TEST', 'TEST', NULL, '16 NOPE', 'NOPEHILL', 'NC', 'NOPEHILL', '00000', '1234567890', '9876543210', 'TEST@TEST.COM', 4);

-- 2.4 --
-- WORKS --
UPDATE CUSTOMER SET FIRSTNAME = 'Robert', LASTNAME = 'Walter' WHERE FIRSTNAME = 'Aaron' AND LASTNAME = 'Mitchell';
-- WORKS --
UPDATE ARTIST SET NAME='CCR' WHERE NAME='Creedence Clearwater Revival';

--2.5--
-- WORKS --
SELECT * FROM INVOICE WHERE BILLINGADDRESS LIKE 'T%';

--2.6--
-- WORKS --
SELECT * FROM INVOICE WHERE TOTAL BETWEEN 15 AND 50;
-- WORKS --
SELECT * FROM EMPLOYEE WHERE HIREDATE BETWEEN TO_DATE('1-JUN-2003', 'dd/mm/yyyy') AND TO_DATE ('1-MAR-2004', 'dd/mm/yyyy');

--2.7--


-- 3.1 --
-- WORKS --
CREATE OR REPLACE FUNCTION GETTIME
RETURN TIMESTAMP
IS
T TIMESTAMP := SYSDATE;
BEGIN
    RETURN(T);
END;
/

SELECT GETTIME() FROM DUAL;

CREATE OR REPLACE FUNCTION GETLENGTH(ident in NUMBER)
RETURN NUMBER
IS
N NUMBER;
BEGIN
SELECT LENGTH(NAME) INTO N FROM MEDIATYPE WHERE MEDIATYPEID=ident;
RETURN(N);
END;
/

SELECT GETLENGTH(1) FROM DUAL;
-- 3.2 --
-- WORKS --
CREATE OR REPLACE FUNCTION AVGTOTAL
RETURN NUMBER
IS
AV NUMBER;
BEGIN
SELECT AVG(TOTAL) INTO AV FROM INVOICE;
RETURN AV;
END;
/

SELECT AVGTOTAL() FROM DUAL;
-- WORKS -- 
CREATE OR REPLACE FUNCTION MOSTCOSTTRACK
RETURN NUMBER
IS
MOST NUMBER := 0.00;
BEGIN
SELECT MAX(UNITPRICE) INTO MOST FROM TRACK;
RETURN MOST;
END;
/

SELECT MOSTCOSTTRACK() FROM DUAL;
-- 3.3 --
CREATE OR REPLACE FUNCTION AVGINVOICELINE
RETURN NUMBER
IS
AV NUMBER := 0.00;
BEGIN
SELECT AVG(UNITPRICE) INTO AV FROM INVOICELINE;
RETURN AV;
END;
/
SELECT AVGINVOICELINE() FROM DUAL;

-- 3.4 --

-- 4.0 -- 

-- 4.1--
CREATE OR REPLACE PROCEDURE GETNAME(PRC out sys_refcursor)
IS
BEGIN
OPEN PRC FOR SELECT FIRSTNAME, LASTNAME FROM EMPLOYEE;
COMMIT;
END;
/

-- 4.2 --
-- WORKS --
CREATE OR REPLACE PROCEDURE REPALCEINFO
(LN IN EMPLOYEE.LASTNAME%TYPE,
IDENT IN EMPLOYEE.EMPLOYEEID%TYPE)
IS
BEGIN
UPDATE EMPLOYEE SET LASTNAME=LN WHERE EMPLOYEEID=IDENT;
COMMIT;
END;
/
-- WORKS --
CREATE OR REPLACE PROCEDURE GETMANAGERS
(IDENT IN EMPLOYEE.EMPLOYEEID%TYPE,
PRC out sys_refcursor
)
IS
BEGIN
OPEN PRC FOR SELECT * FROM EMPLOYEE WHERE EMPLOYEEID= (
    SELECT REPORTSTO FROM EMPLOYEE WHERE EMPLOYEEID=IDENT
);
COMMIT;
END;
/

-- 4.3 --
CREATE OR REPLACE PROCEDURE GETCUSTOMER
(PRC out sys_refcursor)
IS
BEGIN
OPEN PRC FOR SELECT FIRSTNAME, LASTNAME, COMPANY FROM CUSTOMER;
END;
/

--5.0---

-- WORKS--
CREATE OR REPLACE PROCEDURE REMOVEINVOICE
(IDENT IN NUMBER)
IS
BEGIN
DELETE FROM INVOICELINE WHERE INVOICELINE.INVOICEID = IDENT;
DELETE FROM INVOICE WHERE INVOICE.INVOICEID = IDENT;
COMMIT;
END;
/

CREATE OR REPLACE PROCEDURE CREATECUSTOMER
IS
N NUMBER;
BEGIN
SELECT MAX(CUSTOMERID) INTO N FROM CUSTOMER;
INSERT INTO CUSTOMER VALUES (N + 1, 'TEST', 'TEST', NULL, '16 NOPE', 'NOPEHILL', 'NC', 'NOPEHILL', '00000', '1234567890', '9876543210', 'TEST@TEST.COM', 4);
COMMIT;
END;
/
-- 6.0 --

-- 6.1 --
-- WORKS --
CREATE OR REPLACE TRIGGER NEWEMPLOYEE
AFTER INSERT ON EMPLOYEE
BEGIN
NULL;
END;
/

INSERT INTO EMPLOYEE VALUES(11, 'GWALTNEY', 'SLOAN', 'MASTER',1, SYSDATE, SYSDATE, 'NO WHERE', 'LOST', 'SOUTH_CAROLINA', 'NOPE',
'29876', '1234567890', '0987654321', 'TEST@TEST.COM');

CREATE OR REPLACE TRIGGER UPDATEALBUM
AFTER UPDATE ON ALBUM
BEGIN
DBMS_OUTPUT.PUT_LINE('HELLO');
END;
/

UPDATE ALBUM SET TITLE='TEST' WHERE albumid=350;

CREATE OR REPLACE TRIGGER DELETEEMPLOYEETRIGGER
AFTER UPDATE ON EMPLOYEE
BEGIN
NULL;
END;
/

-- 7.0 --

-- 7.1 --
SELECT FIRSTNAME, LASTNAME, INVOICE.INVOICEID FROM CUSTOMER INNER JOIN INVOICE ON INVOICE.CUSTOMERID = CUSTOMER.CUSTOMERID;

--7.2--
SELECT INVOICE.CUSTOMERID, CUSTOMER.FIRSTNAME, CUSTOMER.LASTNAME, INVOICE.INVOICEID, INVOICE.TOTAL 
    FROM CUSTOMER FULL OUTER JOIN INVOICE ON INVOICE.CUSTOMERID = CUSTOMER.CUSTOMERID;
    
--7.3--
SELECT ARTIST.NAME, ALBUM.TITLE FROM ARTIST RIGHT OUTER JOIN ALBUM ON ARTIST.ARTISTID = ALBUM.ARTISTID;

--7.4--
SELECT * FROM ALBUM CROSS JOIN ARTIST ORDER BY ARTIST.NAME ASC;

--7.5--
SELECT * FROM EMPLOYEE E1, EMPLOYEE E2 WHERE E1.REPORTSTO = E2.EMPLOYEEID;