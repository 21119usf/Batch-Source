package com.revature.reflections;

import java.lang.reflect.Constructor;

public class RefelectionDemo 
{
	/*
	 * A way for java to inspect itself at runtime.
	 * Can break encapsulation.
	 * Contains method for runtime inspection of objects.
	 * Class of object
	 * fields
	 * methods
	 * instructors
	 * includes private members.
	 * can modify or instantiate things, invoke methods, etc.
	 * java.lang.reflect
	 */
	public static void main(String[] args) 
	{
		try 
		{
			Class<?> c = Class.forName("java.awt.Dimension");
			
			System.out.println("Constructors: ");
			
			Constructor<?> con [] = c.getConstructors();
			
			for(int i = 0; i < )
		} 
		catch (ClassNotFoundException e) 
		{
			e.printStackTrace();
		}
	}

}
